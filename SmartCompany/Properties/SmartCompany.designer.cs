#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartCompany.Properties
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SmartCompany")]
	public partial class SmartCompanyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPrivilege(Privilege instance);
    partial void UpdatePrivilege(Privilege instance);
    partial void DeletePrivilege(Privilege instance);
    partial void InsertSysUser(SysUser instance);
    partial void UpdateSysUser(SysUser instance);
    partial void DeleteSysUser(SysUser instance);
    partial void InsertSysUserLogStatus(SysUserLogStatus instance);
    partial void UpdateSysUserLogStatus(SysUserLogStatus instance);
    partial void DeleteSysUserLogStatus(SysUserLogStatus instance);
    partial void InsertLoginTry(LoginTry instance);
    partial void UpdateLoginTry(LoginTry instance);
    partial void DeleteLoginTry(LoginTry instance);
    partial void InsertVisitor(Visitor instance);
    partial void UpdateVisitor(Visitor instance);
    partial void DeleteVisitor(Visitor instance);
    partial void InsertVisitorPage(VisitorPage instance);
    partial void UpdateVisitorPage(VisitorPage instance);
    partial void DeleteVisitorPage(VisitorPage instance);
    partial void InsertContactUs(ContactUs instance);
    partial void UpdateContactUs(ContactUs instance);
    partial void DeleteContactUs(ContactUs instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertServiceTitle(ServiceTitle instance);
    partial void UpdateServiceTitle(ServiceTitle instance);
    partial void DeleteServiceTitle(ServiceTitle instance);
    #endregion
		
		public SmartCompanyDataContext() : 
				base(global::SmartCompany.Properties.Settings.Default.ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SmartCompanyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SmartCompanyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SmartCompanyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SmartCompanyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Privilege> Privileges
		{
			get
			{
				return this.GetTable<Privilege>();
			}
		}
		
		public System.Data.Linq.Table<SysUser> SysUsers
		{
			get
			{
				return this.GetTable<SysUser>();
			}
		}
		
		public System.Data.Linq.Table<SysUserLogStatus> SysUserLogStatus
		{
			get
			{
				return this.GetTable<SysUserLogStatus>();
			}
		}
		
		public System.Data.Linq.Table<LoginTry> LoginTries
		{
			get
			{
				return this.GetTable<LoginTry>();
			}
		}
		
		public System.Data.Linq.Table<Visitor> Visitors
		{
			get
			{
				return this.GetTable<Visitor>();
			}
		}
		
		public System.Data.Linq.Table<VisitorPage> VisitorPages
		{
			get
			{
				return this.GetTable<VisitorPage>();
			}
		}
		
		public System.Data.Linq.Table<ContactUs> ContactUs
		{
			get
			{
				return this.GetTable<ContactUs>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<ServiceTitle> ServiceTitles
		{
			get
			{
				return this.GetTable<ServiceTitle>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Business.InsertContent")]
		public int InsertContent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItsService", DbType="Bit")] System.Nullable<bool> itsService, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="SmallInt")] System.Nullable<short> categoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="NVarChar(60)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(1000)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Language", DbType="Char(2)")] string language, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImagePath", DbType="NVarChar(255)")] string imagePath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Slide", DbType="Bit")] System.Nullable<bool> slide, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EditedBy_Id", DbType="Int")] System.Nullable<int> editedBy_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ModifiedDate", DbType="DateTime")] System.Nullable<System.DateTime> modifiedDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Show", DbType="Bit")] System.Nullable<bool> show)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itsService, categoryID, title, description, language, imagePath, slide, editedBy_Id, modifiedDate, show);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Company.SearchContacts")]
		public ISingleResult<SearchContactsResult> SearchContacts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="KeyWord", DbType="NVarChar(30)")] string keyWord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), keyWord);
			return ((ISingleResult<SearchContactsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Company.InsertContacts")]
		public int InsertContacts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(30)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(80)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Message", DbType="NVarChar(200)")] string message, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SentDate", DbType="DateTime")] System.Nullable<System.DateTime> sentDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IPAddress", DbType="NVarChar(16)")] string iPAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MachineName", DbType="NVarChar(30)")] string machineName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MacAddress", DbType="VarChar(50)")] string macAddress)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, email, message, sentDate, iPAddress, machineName, macAddress);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Company.InsertSentEmail")]
		public int InsertSentEmail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToEmail", DbType="NVarChar(80)")] string toEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subject", DbType="NVarChar(160)")] string subject, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Message", DbType="NVarChar(1200)")] string message, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SentDate", DbType="DateTime")] System.Nullable<System.DateTime> sentDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), toEmail, subject, message, sentDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Control.InsertSysUser")]
		public int InsertSysUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(30)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(255)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(80)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Privilege_Id", DbType="TinyInt")] System.Nullable<byte> privilege_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(30)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(30)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mobile", DbType="NVarChar(25)")] string mobile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JoinDate", DbType="DateTime")] System.Nullable<System.DateTime> joinDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Active", DbType="Bit")] System.Nullable<bool> active)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, password, email, privilege_Id, firstName, lastName, mobile, joinDate, active);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Control.SelectUser")]
		public ISingleResult<SelectUserResult> SelectUser()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SelectUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Company.SearchUser")]
		public ISingleResult<SearchUserResult> SearchUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="KeyWord", DbType="NVarChar(30)")] string keyWord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), keyWord);
			return ((ISingleResult<SearchUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Control.DeleteUser")]
		public int DeleteUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Control.ChangeCurrentUserPassword")]
		public int ChangeCurrentUserPassword([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldPasswordHas", DbType="NVarChar(255)")] string oldPasswordHas, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewPasswordHas", DbType="NVarChar(255)")] string newPasswordHas)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, oldPasswordHas, newPasswordHas);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Control.InsertSysUserLogStatus")]
		public int InsertSysUserLogStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SysUser_Id", DbType="Int")] System.Nullable<int> sysUser_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginTime", DbType="Time")] System.Nullable<System.TimeSpan> loginTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginDate", DbType="Date")] System.Nullable<System.DateTime> loginDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LogIn", DbType="Bit")] System.Nullable<bool> logIn)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sysUser_Id, loginTime, loginDate, logIn);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Control.InsertLoginTries")]
		public int InsertLoginTries([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EnteredUserName", DbType="NVarChar(30)")] string enteredUserName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EnteredPassword", DbType="NVarChar(255)")] string enteredPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComputerName", DbType="NVarChar(30)")] string computerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IPAddress", DbType="NVarChar(30)")] string iPAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MacAddress", DbType="NVarChar(30)")] string macAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginDate", DbType="DateTime2")] System.Nullable<System.DateTime> loginDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TriesTimes", DbType="TinyInt")] System.Nullable<byte> triesTimes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), enteredUserName, enteredPassword, computerName, iPAddress, macAddress, loginDate, triesTimes, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Company.CalculateVisitor")]
		public int CalculateVisitor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Page", DbType="VarChar(12)")] string page, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="Date")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), page, date);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Control.ControlPanelAuthentication")]
		public ISingleResult<ControlPanelAuthenticationResult> ControlPanelAuthentication([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(30)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordHash", DbType="NVarChar(255)")] string passwordHash)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, passwordHash);
			return ((ISingleResult<ControlPanelAuthenticationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Business.DeleteContent")]
		public int DeleteContent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Multi", DbType="Bit")] System.Nullable<bool> multi)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, multi);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Business.SearchContent")]
		public ISingleResult<SearchContentResult> SearchContent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Language", DbType="Char(2)")] string language, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EditedBy_Id", DbType="Int")] System.Nullable<int> editedBy_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Privilege_Id", DbType="TinyInt")] System.Nullable<byte> privilege_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="KeyWord", DbType="NVarChar(30)")] string keyWord, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItsService", DbType="Bit")] System.Nullable<bool> itsService)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), language, editedBy_Id, privilege_Id, keyWord, itsService);
			return ((ISingleResult<SearchContentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Business.SelectContent")]
		public ISingleResult<SelectContentResult> SelectContent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Language", DbType="Char(2)")] string language, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EditedBy_Id", DbType="Int")] System.Nullable<int> editedBy_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Privilege_Id", DbType="TinyInt")] System.Nullable<byte> privilege_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItsService", DbType="Bit")] System.Nullable<bool> itsService)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), language, editedBy_Id, privilege_Id, itsService);
			return ((ISingleResult<SelectContentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Business.SelectContentList")]
		public ISingleResult<SelectContentListResult> SelectContentList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Language", DbType="Char(2)")] string language, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItsService", DbType="Bit")] System.Nullable<bool> itsService)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), language, itsService);
			return ((ISingleResult<SelectContentListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Business.SelectOneContent")]
		public ISingleResult<SelectOneContentResult> SelectOneContent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Language", DbType="Char(2)")] string language)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, language);
			return ((ISingleResult<SelectOneContentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Business.SelectSideNewsList")]
		public ISingleResult<SelectSideNewsListResult> SelectSideNewsList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Language", DbType="Char(2)")] string language)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), language);
			return ((ISingleResult<SelectSideNewsListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Business.SelectSideServiceList")]
		public ISingleResult<SelectSideServiceListResult> SelectSideServiceList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Language", DbType="Char(2)")] string language)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), language);
			return ((ISingleResult<SelectSideServiceListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Business.SelectSlideService")]
		public ISingleResult<SelectSlideServiceResult> SelectSlideService([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Language", DbType="Char(2)")] string language)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), language);
			return ((ISingleResult<SelectSlideServiceResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Control.Privilege")]
	public partial class Privilege : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Name;
		
		private EntitySet<SysUser> _SysUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Privilege()
		{
			this._SysUsers = new EntitySet<SysUser>(new Action<SysUser>(this.attach_SysUsers), new Action<SysUser>(this.detach_SysUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Privilege_SysUser", Storage="_SysUsers", ThisKey="Id", OtherKey="Privilege_Id")]
		public EntitySet<SysUser> SysUsers
		{
			get
			{
				return this._SysUsers;
			}
			set
			{
				this._SysUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SysUsers(SysUser entity)
		{
			this.SendPropertyChanging();
			entity.Privilege = this;
		}
		
		private void detach_SysUsers(SysUser entity)
		{
			this.SendPropertyChanging();
			entity.Privilege = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Control.SysUser")]
	public partial class SysUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Email;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Mobile;
		
		private System.Nullable<byte> _Privilege_Id;
		
		private System.Nullable<System.DateTime> _JoinDate;
		
		private bool _Active;
		
		private EntitySet<SysUserLogStatus> _SysUserLogStatus;
		
		private EntitySet<Service> _Services;
		
		private EntityRef<Privilege> _Privilege;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnPrivilege_IdChanging(System.Nullable<byte> value);
    partial void OnPrivilege_IdChanged();
    partial void OnJoinDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJoinDateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SysUser()
		{
			this._SysUserLogStatus = new EntitySet<SysUserLogStatus>(new Action<SysUserLogStatus>(this.attach_SysUserLogStatus), new Action<SysUserLogStatus>(this.detach_SysUserLogStatus));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._Privilege = default(EntityRef<Privilege>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(30)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(30)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(25)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Privilege_Id", DbType="TinyInt")]
		public System.Nullable<byte> Privilege_Id
		{
			get
			{
				return this._Privilege_Id;
			}
			set
			{
				if ((this._Privilege_Id != value))
				{
					if (this._Privilege.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrivilege_IdChanging(value);
					this.SendPropertyChanging();
					this._Privilege_Id = value;
					this.SendPropertyChanged("Privilege_Id");
					this.OnPrivilege_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_SysUserLogStatus", Storage="_SysUserLogStatus", ThisKey="Id", OtherKey="SysUser_Id")]
		public EntitySet<SysUserLogStatus> SysUserLogStatus
		{
			get
			{
				return this._SysUserLogStatus;
			}
			set
			{
				this._SysUserLogStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_Service", Storage="_Services", ThisKey="Id", OtherKey="EditedBy_Id")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Privilege_SysUser", Storage="_Privilege", ThisKey="Privilege_Id", OtherKey="Id", IsForeignKey=true)]
		public Privilege Privilege
		{
			get
			{
				return this._Privilege.Entity;
			}
			set
			{
				Privilege previousValue = this._Privilege.Entity;
				if (((previousValue != value) 
							|| (this._Privilege.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Privilege.Entity = null;
						previousValue.SysUsers.Remove(this);
					}
					this._Privilege.Entity = value;
					if ((value != null))
					{
						value.SysUsers.Add(this);
						this._Privilege_Id = value.Id;
					}
					else
					{
						this._Privilege_Id = default(Nullable<byte>);
					}
					this.SendPropertyChanged("Privilege");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SysUserLogStatus(SysUserLogStatus entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = this;
		}
		
		private void detach_SysUserLogStatus(SysUserLogStatus entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Control.SysUserLogStatus")]
	public partial class SysUserLogStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SysUser_Id;
		
		private System.Nullable<System.TimeSpan> _LoginTime;
		
		private System.Nullable<System.DateTime> _LoginDate;
		
		private System.Nullable<System.TimeSpan> _LogoutTime;
		
		private System.Nullable<System.DateTime> _LogoutDate;
		
		private System.Nullable<bool> _LogIn;
		
		private EntityRef<SysUser> _SysUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSysUser_IdChanging(System.Nullable<int> value);
    partial void OnSysUser_IdChanged();
    partial void OnLoginTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnLoginTimeChanged();
    partial void OnLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoginDateChanged();
    partial void OnLogoutTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnLogoutTimeChanged();
    partial void OnLogoutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogoutDateChanged();
    partial void OnLogInChanging(System.Nullable<bool> value);
    partial void OnLogInChanged();
    #endregion
		
		public SysUserLogStatus()
		{
			this._SysUser = default(EntityRef<SysUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysUser_Id", DbType="Int")]
		public System.Nullable<int> SysUser_Id
		{
			get
			{
				return this._SysUser_Id;
			}
			set
			{
				if ((this._SysUser_Id != value))
				{
					if (this._SysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSysUser_IdChanging(value);
					this.SendPropertyChanging();
					this._SysUser_Id = value;
					this.SendPropertyChanged("SysUser_Id");
					this.OnSysUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> LoginTime
		{
			get
			{
				return this._LoginTime;
			}
			set
			{
				if ((this._LoginTime != value))
				{
					this.OnLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LoginTime = value;
					this.SendPropertyChanged("LoginTime");
					this.OnLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="Date")]
		public System.Nullable<System.DateTime> LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoutTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> LogoutTime
		{
			get
			{
				return this._LogoutTime;
			}
			set
			{
				if ((this._LogoutTime != value))
				{
					this.OnLogoutTimeChanging(value);
					this.SendPropertyChanging();
					this._LogoutTime = value;
					this.SendPropertyChanged("LogoutTime");
					this.OnLogoutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoutDate", DbType="Date")]
		public System.Nullable<System.DateTime> LogoutDate
		{
			get
			{
				return this._LogoutDate;
			}
			set
			{
				if ((this._LogoutDate != value))
				{
					this.OnLogoutDateChanging(value);
					this.SendPropertyChanging();
					this._LogoutDate = value;
					this.SendPropertyChanged("LogoutDate");
					this.OnLogoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogIn", DbType="Bit")]
		public System.Nullable<bool> LogIn
		{
			get
			{
				return this._LogIn;
			}
			set
			{
				if ((this._LogIn != value))
				{
					this.OnLogInChanging(value);
					this.SendPropertyChanging();
					this._LogIn = value;
					this.SendPropertyChanged("LogIn");
					this.OnLogInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_SysUserLogStatus", Storage="_SysUser", ThisKey="SysUser_Id", OtherKey="Id", IsForeignKey=true)]
		public SysUser SysUser
		{
			get
			{
				return this._SysUser.Entity;
			}
			set
			{
				SysUser previousValue = this._SysUser.Entity;
				if (((previousValue != value) 
							|| (this._SysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysUser.Entity = null;
						previousValue.SysUserLogStatus.Remove(this);
					}
					this._SysUser.Entity = value;
					if ((value != null))
					{
						value.SysUserLogStatus.Add(this);
						this._SysUser_Id = value.Id;
					}
					else
					{
						this._SysUser_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("SysUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Control.LoginTries")]
	public partial class LoginTry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _EnteredUserName;
		
		private string _EnteredPassword;
		
		private string _ComputerName;
		
		private string _IPAddress;
		
		private string _MacAddress;
		
		private System.Nullable<System.DateTime> _LoginDate;
		
		private System.Nullable<byte> _TriesTimes;
		
		private bool _Block;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEnteredUserNameChanging(string value);
    partial void OnEnteredUserNameChanged();
    partial void OnEnteredPasswordChanging(string value);
    partial void OnEnteredPasswordChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnMacAddressChanging(string value);
    partial void OnMacAddressChanged();
    partial void OnLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoginDateChanged();
    partial void OnTriesTimesChanging(System.Nullable<byte> value);
    partial void OnTriesTimesChanged();
    partial void OnBlockChanging(bool value);
    partial void OnBlockChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public LoginTry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUserName", DbType="NVarChar(30)")]
		public string EnteredUserName
		{
			get
			{
				return this._EnteredUserName;
			}
			set
			{
				if ((this._EnteredUserName != value))
				{
					this.OnEnteredUserNameChanging(value);
					this.SendPropertyChanging();
					this._EnteredUserName = value;
					this.SendPropertyChanged("EnteredUserName");
					this.OnEnteredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredPassword", DbType="NVarChar(255)")]
		public string EnteredPassword
		{
			get
			{
				return this._EnteredPassword;
			}
			set
			{
				if ((this._EnteredPassword != value))
				{
					this.OnEnteredPasswordChanging(value);
					this.SendPropertyChanging();
					this._EnteredPassword = value;
					this.SendPropertyChanged("EnteredPassword");
					this.OnEnteredPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(30)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(30)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacAddress", DbType="NVarChar(30)")]
		public string MacAddress
		{
			get
			{
				return this._MacAddress;
			}
			set
			{
				if ((this._MacAddress != value))
				{
					this.OnMacAddressChanging(value);
					this.SendPropertyChanging();
					this._MacAddress = value;
					this.SendPropertyChanged("MacAddress");
					this.OnMacAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriesTimes", DbType="TinyInt")]
		public System.Nullable<byte> TriesTimes
		{
			get
			{
				return this._TriesTimes;
			}
			set
			{
				if ((this._TriesTimes != value))
				{
					this.OnTriesTimesChanging(value);
					this.SendPropertyChanging();
					this._TriesTimes = value;
					this.SendPropertyChanged("TriesTimes");
					this.OnTriesTimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Block", DbType="Bit NOT NULL")]
		public bool Block
		{
			get
			{
				return this._Block;
			}
			set
			{
				if ((this._Block != value))
				{
					this.OnBlockChanging(value);
					this.SendPropertyChanging();
					this._Block = value;
					this.SendPropertyChanged("Block");
					this.OnBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Company.Visitor")]
	public partial class Visitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Page;
		
		private System.Nullable<short> _Day;
		
		private System.Nullable<short> _Week;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<int> _AllVisitor;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntitySet<VisitorPage> _VisitorPages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    partial void OnDayChanging(System.Nullable<short> value);
    partial void OnDayChanged();
    partial void OnWeekChanging(System.Nullable<short> value);
    partial void OnWeekChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnAllVisitorChanging(System.Nullable<int> value);
    partial void OnAllVisitorChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public Visitor()
		{
			this._VisitorPages = new EntitySet<VisitorPage>(new Action<VisitorPage>(this.attach_VisitorPages), new Action<VisitorPage>(this.detach_VisitorPages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="SmallInt")]
		public System.Nullable<short> Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Week", DbType="SmallInt")]
		public System.Nullable<short> Week
		{
			get
			{
				return this._Week;
			}
			set
			{
				if ((this._Week != value))
				{
					this.OnWeekChanging(value);
					this.SendPropertyChanging();
					this._Week = value;
					this.SendPropertyChanged("Week");
					this.OnWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllVisitor", DbType="Int")]
		public System.Nullable<int> AllVisitor
		{
			get
			{
				return this._AllVisitor;
			}
			set
			{
				if ((this._AllVisitor != value))
				{
					this.OnAllVisitorChanging(value);
					this.SendPropertyChanging();
					this._AllVisitor = value;
					this.SendPropertyChanged("AllVisitor");
					this.OnAllVisitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_VisitorPage", Storage="_VisitorPages", ThisKey="Id", OtherKey="Visitor_Id")]
		public EntitySet<VisitorPage> VisitorPages
		{
			get
			{
				return this._VisitorPages;
			}
			set
			{
				this._VisitorPages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VisitorPages(VisitorPage entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = this;
		}
		
		private void detach_VisitorPages(VisitorPage entity)
		{
			this.SendPropertyChanging();
			entity.Visitor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Company.VisitorPage")]
	public partial class VisitorPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Language;
		
		private string _TitlePage;
		
		private System.Nullable<byte> _Visitor_Id;
		
		private EntityRef<Visitor> _Visitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnTitlePageChanging(string value);
    partial void OnTitlePageChanged();
    partial void OnVisitor_IdChanging(System.Nullable<byte> value);
    partial void OnVisitor_IdChanged();
    #endregion
		
		public VisitorPage()
		{
			this._Visitor = default(EntityRef<Visitor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitlePage", DbType="NVarChar(30)")]
		public string TitlePage
		{
			get
			{
				return this._TitlePage;
			}
			set
			{
				if ((this._TitlePage != value))
				{
					this.OnTitlePageChanging(value);
					this.SendPropertyChanging();
					this._TitlePage = value;
					this.SendPropertyChanged("TitlePage");
					this.OnTitlePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visitor_Id", DbType="TinyInt")]
		public System.Nullable<byte> Visitor_Id
		{
			get
			{
				return this._Visitor_Id;
			}
			set
			{
				if ((this._Visitor_Id != value))
				{
					if (this._Visitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitor_IdChanging(value);
					this.SendPropertyChanging();
					this._Visitor_Id = value;
					this.SendPropertyChanged("Visitor_Id");
					this.OnVisitor_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_VisitorPage", Storage="_Visitor", ThisKey="Visitor_Id", OtherKey="Id", IsForeignKey=true)]
		public Visitor Visitor
		{
			get
			{
				return this._Visitor.Entity;
			}
			set
			{
				Visitor previousValue = this._Visitor.Entity;
				if (((previousValue != value) 
							|| (this._Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visitor.Entity = null;
						previousValue.VisitorPages.Remove(this);
					}
					this._Visitor.Entity = value;
					if ((value != null))
					{
						value.VisitorPages.Add(this);
						this._Visitor_Id = value.Id;
					}
					else
					{
						this._Visitor_Id = default(Nullable<byte>);
					}
					this.SendPropertyChanged("Visitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Company.ContactUs")]
	public partial class ContactUs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Email;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _SentDate;
		
		private string _IPAddress;
		
		private string _MachineName;
		
		private string _MacAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSentDateChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnMacAddressChanging(string value);
    partial void OnMacAddressChanged();
    #endregion
		
		public ContactUs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(200)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this.OnSentDateChanging(value);
					this.SendPropertyChanging();
					this._SentDate = value;
					this.SendPropertyChanged("SentDate");
					this.OnSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(16)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(30)")]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacAddress", DbType="VarChar(50)")]
		public string MacAddress
		{
			get
			{
				return this._MacAddress;
			}
			set
			{
				if ((this._MacAddress != value))
				{
					this.OnMacAddressChanging(value);
					this.SendPropertyChanging();
					this._MacAddress = value;
					this.SendPropertyChanged("MacAddress");
					this.OnMacAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Business.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<bool> _ItsService;
		
		private System.Nullable<short> _CategoryID;
		
		private string _ImagePath;
		
		private bool _Slide;
		
		private System.Nullable<int> _EditedBy_Id;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private bool _Show;
		
		private EntitySet<ServiceTitle> _ServiceTitles;
		
		private EntityRef<SysUser> _SysUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItsServiceChanging(System.Nullable<bool> value);
    partial void OnItsServiceChanged();
    partial void OnCategoryIDChanging(System.Nullable<short> value);
    partial void OnCategoryIDChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnSlideChanging(bool value);
    partial void OnSlideChanged();
    partial void OnEditedBy_IdChanging(System.Nullable<int> value);
    partial void OnEditedBy_IdChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnShowChanging(bool value);
    partial void OnShowChanged();
    #endregion
		
		public Service()
		{
			this._ServiceTitles = new EntitySet<ServiceTitle>(new Action<ServiceTitle>(this.attach_ServiceTitles), new Action<ServiceTitle>(this.detach_ServiceTitles));
			this._SysUser = default(EntityRef<SysUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItsService", DbType="Bit")]
		public System.Nullable<bool> ItsService
		{
			get
			{
				return this._ItsService;
			}
			set
			{
				if ((this._ItsService != value))
				{
					this.OnItsServiceChanging(value);
					this.SendPropertyChanging();
					this._ItsService = value;
					this.SendPropertyChanged("ItsService");
					this.OnItsServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="SmallInt")]
		public System.Nullable<short> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(255)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide", DbType="Bit NOT NULL")]
		public bool Slide
		{
			get
			{
				return this._Slide;
			}
			set
			{
				if ((this._Slide != value))
				{
					this.OnSlideChanging(value);
					this.SendPropertyChanging();
					this._Slide = value;
					this.SendPropertyChanged("Slide");
					this.OnSlideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedBy_Id", DbType="Int")]
		public System.Nullable<int> EditedBy_Id
		{
			get
			{
				return this._EditedBy_Id;
			}
			set
			{
				if ((this._EditedBy_Id != value))
				{
					if (this._SysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEditedBy_IdChanging(value);
					this.SendPropertyChanging();
					this._EditedBy_Id = value;
					this.SendPropertyChanged("EditedBy_Id");
					this.OnEditedBy_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit NOT NULL")]
		public bool Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this.OnShowChanging(value);
					this.SendPropertyChanging();
					this._Show = value;
					this.SendPropertyChanged("Show");
					this.OnShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ServiceTitle", Storage="_ServiceTitles", ThisKey="Id", OtherKey="Service_Id")]
		public EntitySet<ServiceTitle> ServiceTitles
		{
			get
			{
				return this._ServiceTitles;
			}
			set
			{
				this._ServiceTitles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_Service", Storage="_SysUser", ThisKey="EditedBy_Id", OtherKey="Id", IsForeignKey=true)]
		public SysUser SysUser
		{
			get
			{
				return this._SysUser.Entity;
			}
			set
			{
				SysUser previousValue = this._SysUser.Entity;
				if (((previousValue != value) 
							|| (this._SysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysUser.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._SysUser.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._EditedBy_Id = value.Id;
					}
					else
					{
						this._EditedBy_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("SysUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceTitles(ServiceTitle entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_ServiceTitles(ServiceTitle entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Business.ServiceTitle")]
	public partial class ServiceTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Service_Id;
		
		private string _Language;
		
		private string _Title;
		
		private string _Description;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnService_IdChanging(System.Nullable<int> value);
    partial void OnService_IdChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ServiceTitle()
		{
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Id", DbType="Int")]
		public System.Nullable<int> Service_Id
		{
			get
			{
				return this._Service_Id;
			}
			set
			{
				if ((this._Service_Id != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnService_IdChanging(value);
					this.SendPropertyChanging();
					this._Service_Id = value;
					this.SendPropertyChanged("Service_Id");
					this.OnService_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Char(2)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ServiceTitle", Storage="_Service", ThisKey="Service_Id", OtherKey="Id", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.ServiceTitles.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.ServiceTitles.Add(this);
						this._Service_Id = value.Id;
					}
					else
					{
						this._Service_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SearchContactsResult
	{
		
		private int _Id;
		
		private string _Name;
		
		private string _Email;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _SentDate;
		
		public SearchContactsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(200)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this._SentDate = value;
				}
			}
		}
	}
	
	public partial class SelectUserResult
	{
		
		private int _Id;
		
		private string _UserName;
		
		private string _Name;
		
		private string _Mobile;
		
		private string _Privilege;
		
		private bool _Active;
		
		public SelectUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(61)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(25)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Privilege", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Privilege
		{
			get
			{
				return this._Privilege;
			}
			set
			{
				if ((this._Privilege != value))
				{
					this._Privilege = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class SearchUserResult
	{
		
		private int _Id;
		
		private string _UserName;
		
		private string _Name;
		
		private string _Mobile;
		
		private string _Privilege;
		
		private bool _Active;
		
		public SearchUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(61)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(25)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Privilege", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Privilege
		{
			get
			{
				return this._Privilege;
			}
			set
			{
				if ((this._Privilege != value))
				{
					this._Privilege = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class ControlPanelAuthenticationResult
	{
		
		private int _Id;
		
		private System.Nullable<byte> _Privilege_Id;
		
		private string _Result;
		
		public ControlPanelAuthenticationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Privilege_Id", DbType="TinyInt")]
		public System.Nullable<byte> Privilege_Id
		{
			get
			{
				return this._Privilege_Id;
			}
			set
			{
				if ((this._Privilege_Id != value))
				{
					this._Privilege_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(12)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
	}
	
	public partial class SearchContentResult
	{
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private string _UserName;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private bool _Show;
		
		public SearchContentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit NOT NULL")]
		public bool Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this._Show = value;
				}
			}
		}
	}
	
	public partial class SelectContentResult
	{
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private string _UserName;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private bool _Show;
		
		public SelectContentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit NOT NULL")]
		public bool Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this._Show = value;
				}
			}
		}
	}
	
	public partial class SelectContentListResult
	{
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private string _ImagePath;
		
		public SelectContentListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(255)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this._ImagePath = value;
				}
			}
		}
	}
	
	public partial class SelectOneContentResult
	{
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private string _ImagePath;
		
		private System.Nullable<bool> _ItsService;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		public SelectOneContentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(255)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this._ImagePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItsService", DbType="Bit")]
		public System.Nullable<bool> ItsService
		{
			get
			{
				return this._ItsService;
			}
			set
			{
				if ((this._ItsService != value))
				{
					this._ItsService = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
	}
	
	public partial class SelectSideNewsListResult
	{
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private string _ImagePath;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		public SelectSideNewsListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(255)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this._ImagePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
	}
	
	public partial class SelectSideServiceListResult
	{
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private string _ImagePath;
		
		public SelectSideServiceListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(255)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this._ImagePath = value;
				}
			}
		}
	}
	
	public partial class SelectSlideServiceResult
	{
		
		private int _Id;
		
		private string _Title;
		
		private string _Description;
		
		private string _ImagePath;
		
		public SelectSlideServiceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(60)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(255)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this._ImagePath = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
